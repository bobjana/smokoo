// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package za.co.zynafin.smokoo;

import java.lang.String;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import za.co.zynafin.smokoo.Auction;

privileged aspect Auction_Roo_Finder {
    
    public static TypedQuery<Auction> Auction.findAuctionsByAuctionTitleEquals(String auctionTitle) {
        if (auctionTitle == null || auctionTitle.length() == 0) throw new IllegalArgumentException("The auctionTitle argument is required");
        EntityManager em = Auction.entityManager();
        TypedQuery<Auction> q = em.createQuery("SELECT Auction FROM Auction AS auction WHERE auction.auctionTitle = :auctionTitle", Auction.class);
        q.setParameter("auctionTitle", auctionTitle);
        return q;
    }
    
    public static TypedQuery<Auction> Auction.findAuctionsByAuctionId(long auctionId) {
        EntityManager em = Auction.entityManager();
        TypedQuery<Auction> q = em.createQuery("SELECT Auction FROM Auction AS auction WHERE auction.auctionId = :auctionId", Auction.class);
        q.setParameter("auctionId", auctionId);
        return q;
    }
    
    public static TypedQuery<Auction> Auction.findAuctionsByClosed(boolean closed) {
        EntityManager em = Auction.entityManager();
        TypedQuery<Auction> q = em.createQuery("SELECT Auction FROM Auction AS auction WHERE auction.closed = :closed", Auction.class);
        q.setParameter("closed", closed);
        return q;
    }
    
}
